<!doctype html>
<html lang="en">
<head>
	<!-- Font Awesome -->
	<link rel="stylesheet" href="${CPATH}/ol3/css/font-awesome.css">
	<link rel="stylesheet" href="${CPATH}/ol3/ol.css" type="text/css">
	<link rel="stylesheet" href="${CPATH}/ol3/base.css" type="text/css">
	
	<title>导调服务端 --v1.0</title>
	<script type="text/javascript"
		src="${CPATH}/vendors/jquery/dist/jquery.min.js"></script>
	<script type="text/javascript" src="${CPATH}/ol3/ol.js"></script>
	<script type="text/javascript">
		ctx='${CPATH}';
		cty='127.0.0.1:8088/${BPATH}';
	</script>
</head>
<body>
	<div id="map"></div>
	<div id="header">
		<p id="logoandtitle" style="display: block;float: left;">天文时间：2016年01月01日 00:00:00</p>
		<div style="float: right;"></div>
	</div>
	<div id="menu">
		<button id="gearsDivClick" class="ol-zoom-in" type="button" title="功能菜单"><i class="fa fa-gears"></i></button>
		<div id="gearsDiv" class="gears">
			<ul>
<!-- 		        <li class="tfullscreen"> -->
<!-- 		            <i class="fa fa-pencil fa-lg"></i> -->
<!-- 		            <span>标绘</span> -->
<!-- 		        </li> -->
<!-- 		        <b></b> -->
		        <li class="tfullscreen" style="padding: 0px 1px; width: 6em;">
		        	<div  id="cl">
			            <i class="fa fa-arrows fa-lg"></i>
			            <span>测量</span>
			            <i id="ud" class="fa fa-angle-down fa-lg"></i>
		            </div>
		            <ul>
		            	<li id="jl">
		            		<i class="fa fa-bicycle fa-lg"></i>
		            		<span>距离</span>
		            	</li>
		            	<li id="mj" style="border: 0px;">
		            		<i class="fa fa-map-o fa-lg"></i>
		            		<span>面积</span>
		            	</li>
<!-- 		            	<li id="deletePoint" style="border: 0px;"> -->
<!-- 		            		<i class="fa fa-map-o fa-lg"></i> -->
<!-- 		            		<span>删除</span> -->
<!-- 		            	</li> -->
		            </ul>
		        </li>
<!-- 		        <b></b> -->
		         <li class="tfullscreen">
		            <i class="fa fa-map-marker fa-lg"></i>
		            <span onclick="addMarker();">定位</span>
		        </li>
		    </ul>
		</div>
	</div>
	<div class="bottomPointing">
		<div>
			<span>当前级别:</span><span id="mapZoom">2</span>
		</div>
		<div>
			<span>X=</span><span id="mapLatX">${coordsX!}</span> 
			<span>&nbsp;Y=</span><span id="mapLatY">${coordsY!}</span>
		</div>
		<div style="float: right;padding-right: 10px;">
			<span>华夏九鼎</span>
		</div>
	</div>
	<script type="text/javascript" src="${CPATH}/ol3/base.js"></script>
	<script type="text/javascript">
		/* 地图初始化  */
		init(${coordsX!},${coordsY!},14,5,19);
		/* 标注点  */
		$.ajax({
			url : "${BPATH}/getMapAll",
			type : 'get',
			dataType : 'json',
			success : function(date) {
				$.each(date.pel,function(n,value) {
					var x = parseFloat(value.x);
					var y = parseFloat(value.y);
					if(x!=0.0 && y!=0.0){
						createMarker(value.id,x,y,1,["name:"+value.pelname,"x:"+x,"y:"+y,"att:"+value.oid,"camp:"+value.camp]);
					}
				});
				$.each(date.mak,function(n,value) {
					var x = parseFloat(value.x);
					var y = parseFloat(value.y);
// 					console.log("M:"+value.name);
					if(x!=0.0 && y!=0.0){
						createMarker(value.id,x,y,3,["name:"+value.code,"x:"+x,"y:"+y,"att:"+value.remark,"camp:"+value.camp]);
					}
				});
				$.each(date.med,function(n,value) {
					var x = parseFloat(value.x);
					var y = parseFloat(value.y);
// 					console.log("J:"+value.mediator_name);
					if(x!=0.0 && y!=0.0){
						createMarker(value.id,x,y,2,["name:"+value.mediator_name,"x:"+x,"y:"+y,"att:"+value.mediator_name,"camp:"+value.camp]);
					}
				});
			}
		});
		
		setInterval(showNewMessages, 1000); //循环执行！！
	    function showNewMessages(){
	    	$.ajax({
				url : "${BPATH}/findChangePel",
				type : 'get',
				dataType : 'json',
				success : function(date) {
					if(date.length>0){
						
						var compareDataR;
						var compareDataB;
						$.each(date,function(n,value) {
							var newMap = value;
							var x = parseFloat(newMap.x);
							var y = parseFloat(newMap.y);
							
							var oldfeature = getFeatureByTagid(newMap.id);
							if(oldfeature != null && oldfeature != undefined){
								oldfeature.setGeometry(new ol.geom.Point(ol.proj.fromLonLat([ x, y ])));
				 				oldfeature.changed();
							}else{
								createMarker(newMap.id,x,y,1,["name:"+newMap.pelname,"x:"+x,"y:"+y,"att:"+newMap.oid,"camp:"+newMap.camp]);
							}
						});
						
					}
				}
	    	});
		}
// 	  var websocket = null;
// 	  //判断当前浏览器是否支持WebSocket
// 	  if ('WebSocket' in window) {
// 	      websocket = new WebSocket("ws://"+window.location.hostname+"/JBase-web/websocket.ws");
// 	  }
// 	  else {
// 	      alert('当前浏览器 Not support websocket')
// 	  }

// 	  //连接发生错误的回调方法
// 	  websocket.onerror = function () {
// 	      console.log("WebSocket连接发生错误");
// 	  };

// 	  //连接成功建立的回调方法
// 	  websocket.onopen = function () {
// 		  console.log("WebSocket连接成功");
// 	  }

// 	  //接收到消息的回调方法
// 	  websocket.onmessage = function (event) {
// 	      setMessageInnerHTML(event.data);
// 	  }

// 	  //连接关闭的回调方法
// 	  websocket.onclose = function () {
// 		  console.log("WebSocket连接关闭");
// 	  }

// 	  //监听窗口关闭事件，当窗口关闭时，主动去关闭websocket连接，防止连接还没断开就关闭窗口，server端会抛异常。
// 	  window.onbeforeunload = function () {
// 	      closeWebSocket();
// 	  }

// 	  //将消息显示在网页上
// 		function setMessageInnerHTML(str) {
// 			if(str!=""&&str!=null){
// 				var compareDataR;
// 				var compareDataB;
// 				var data = eval('(' + str + ')');
// 				if(data.newMap!=null){
// 					var newMap = data.newMap;
// 					var x = parseFloat(newMap.axesX);
// 					var y = parseFloat(newMap.axesY);
// 					var oldfeature = getFeatureByTagid(newMap.id);
// 					if(oldfeature != null && oldfeature != undefined){
// 						console.log(oldfeature.getId());
// 						oldfeature.setGeometry(new ol.geom.Point(ol.proj.fromLonLat([ x, y ])));
// 		 				oldfeature.changed();
// 					}
// 				}
// 			}
// 	  	}

// 	  //关闭WebSocket连接
// 	  function closeWebSocket() {
// 	      websocket.close();
// 	  }
	</script>
</body>
</html>