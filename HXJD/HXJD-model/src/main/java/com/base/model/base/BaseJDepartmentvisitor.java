package com.base.model.base;

import com.base.message.MessageKit;
import com.base.model.core.JModel;
import java.math.BigInteger;

import com.jfinal.plugin.activerecord.IBean;
import com.jfinal.plugin.ehcache.CacheKit;
import com.jfinal.plugin.ehcache.IDataLoader;

/**
 *  Auto generated by JPress, do not modify this file.
 */
@SuppressWarnings("serial")
public abstract class BaseJDepartmentvisitor<M extends BaseJDepartmentvisitor<M>> extends JModel<M> implements IBean {

	public static final String CACHE_NAME = "departmentvisitor";
	public static final String METADATA_TYPE = "departmentvisitor";

	public static final String ACTION_ADD = "departmentvisitor:add";
	public static final String ACTION_DELETE = "departmentvisitor:delete";
	public static final String ACTION_UPDATE = "departmentvisitor:update";

	public void removeCache(Object key){
		if(null == key) {
			return;
		}
		CacheKit.remove(CACHE_NAME, key);
	}

	public void putCache(Object key,Object value){
		CacheKit.put(CACHE_NAME, key, value);
	}

	public M getCache(Object key){
		return CacheKit.get(CACHE_NAME, key);
	}

	public M getCache(Object key,IDataLoader dataloader){
		return CacheKit.get(CACHE_NAME, key, dataloader);
	}

	@Override
	public boolean equals(Object o) {
		if(o == null){ return false; }
		if(!(o instanceof BaseJDepartmentvisitor<?>)){return false;}

		BaseJDepartmentvisitor<?> m = (BaseJDepartmentvisitor<?>) o;
		if(m.getId() == null){return false;}

		return m.getId().compareTo(this.getId()) == 0;
	}

	@Override
	public boolean save() {
		boolean saved = super.save();
		if (saved) { MessageKit.sendMessage(ACTION_ADD, this); }
		return saved;
	}

	@Override
	public boolean delete() {
		boolean deleted = super.delete();
		if (deleted) { MessageKit.sendMessage(ACTION_DELETE, this); }
		return deleted;
	}

	@Override
	public boolean deleteById(Object idValue) {
		boolean deleted = super.deleteById(idValue);
		if (deleted) { MessageKit.sendMessage(ACTION_DELETE, this); }
		return deleted;
	}

	@Override
	public boolean update() {
		boolean update = super.update();
		if (update) { MessageKit.sendMessage(ACTION_UPDATE, this); }
		return update;
	}

	public void setId(java.lang.Integer id) {
		set("id", id);
	}

	public java.lang.Integer getId() {
		return get("id");
	}

	public void setDepartmentId(java.lang.Integer departmentId) {
		set("departmentId", departmentId);
	}

	public java.lang.Integer getDepartmentId() {
		return get("departmentId");
	}

	public void setVisitorId(java.lang.Integer visitorId) {
		set("visitorId", visitorId);
	}

	public java.lang.Integer getVisitorId() {
		return get("visitorId");
	}

}
