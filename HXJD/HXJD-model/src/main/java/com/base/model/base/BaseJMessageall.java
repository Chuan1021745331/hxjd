package com.base.model.base;

import com.base.message.MessageKit;
import com.base.model.core.JModel;
import java.math.BigInteger;

import com.jfinal.plugin.activerecord.IBean;
import com.jfinal.plugin.ehcache.CacheKit;
import com.jfinal.plugin.ehcache.IDataLoader;

/**
 *  Auto generated by JPress, do not modify this file.
 */
@SuppressWarnings("serial")
public abstract class BaseJMessageall<M extends BaseJMessageall<M>> extends JModel<M> implements IBean {

	public static final String CACHE_NAME = "messageall";
	public static final String METADATA_TYPE = "messageall";

	public static final String ACTION_ADD = "messageall:add";
	public static final String ACTION_DELETE = "messageall:delete";
	public static final String ACTION_UPDATE = "messageall:update";

	public void removeCache(Object key){
		if(key == null) {
			return;
		}
		CacheKit.remove(CACHE_NAME, key);
	}

	public void putCache(Object key,Object value){
		CacheKit.put(CACHE_NAME, key, value);
	}

	public M getCache(Object key){
		return CacheKit.get(CACHE_NAME, key);
	}

	public M getCache(Object key,IDataLoader dataloader){
		return CacheKit.get(CACHE_NAME, key, dataloader);
	}

	@Override
	public boolean equals(Object o) {
		if(o == null){ return false; }
		if(!(o instanceof BaseJMessageall<?>)){return false;}

		BaseJMessageall<?> m = (BaseJMessageall<?>) o;
		if(m.getId() == null){return false;}

		return m.getId().compareTo(this.getId()) == 0;
	}

	@Override
	public boolean save() {
		boolean saved = super.save();
		if (saved) { MessageKit.sendMessage(ACTION_ADD, this); }
		return saved;
	}

	@Override
	public boolean delete() {
		boolean deleted = super.delete();
		if (deleted) { MessageKit.sendMessage(ACTION_DELETE, this); }
		return deleted;
	}

	@Override
	public boolean deleteById(Object idValue) {
		boolean deleted = super.deleteById(idValue);
		if (deleted) { MessageKit.sendMessage(ACTION_DELETE, this); }
		return deleted;
	}

	@Override
	public boolean update() {
		boolean update = super.update();
		if (update) { MessageKit.sendMessage(ACTION_UPDATE, this); }
		return update;
	}

	public void setId(java.lang.Long id) {
		set("id", id);
	}

	public java.lang.Long getId() {
		return get("id");
	}

	public void setSenderId(java.lang.Integer senderId) {
		set("senderId", senderId);
	}

	public java.lang.Integer getSenderId() {
		return get("senderId");
	}

	public void setMsgType(java.lang.String msgType) {
		set("msgType", msgType);
	}

	public java.lang.String getMsgType() {
		return get("msgType");
	}

	public void setMessage(java.lang.String message) {
		set("message", message);
	}

	public java.lang.String getMessage() {
		return get("message");
	}

	public void setSendTime(java.lang.String sendTime) {
		set("sendTime", sendTime);
	}

	public java.lang.String getSendTime() {
		return get("sendTime");
	}

	public void setSendName(java.lang.String sendName) {
		set("sendName", sendName);
	}

	public java.lang.String getSendName() {
		return get("sendName");
	}

	public void setCamp(java.lang.String camp) {
		set("camp", camp);
	}

	public java.lang.String getCamp() {
		return get("camp");
	}

	public void setState(java.lang.Integer state) {
		set("state", state);
	}

	public java.lang.Integer getState() {
		return get("state");
	}

}
